var $window = $(window),
    $header = $(".header");

function onScroll() {
    $window.scrollTop() ? $header.addClass("is-active") : $header.removeClass("is-active")
}
$window.scroll(onScroll), $((function () {
    $(".slider_f").each((function () {
        var e = $(".sld_f", this),
            n = $(".arrow_l", this),
            i = $(".arrow_r", this);
        e.eq(0).addClass("active"), n.on("click", (function () {
            var n;
            0 == (n = e.filter(".active").index()) && (n = e.length), e.eq(n - 1).addClass("active").siblings().removeClass("active")
        })), i.on("click", (function () {
            var n;
            (n = e.filter(".active").index()) == e.length - 1 && (n = -1), e.eq(n + 1).addClass("active").siblings().removeClass("active")
        }))
    }))
})), $((function () {
    var e = new ScrollMagic.Controller;
    $(".slider_f").each((function () {
        var n = $(this).find(".slider"),
            i = TweenMax.from(n, 1, {
                y: "-20%",
                ease: Power0.easeNone
            });
        new ScrollMagic.Scene({
            triggerElement: this,
            triggerHook: 1,
            duration: "200%"
        }).setTween(i).addTo(e)
    }))
})), $(document).ready((function () {
    new Swiper(".swiper-container", {
        slidesPerView: 3,
        resistanceRatio: .7,
        spaceBetween: 30,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev"
        },
        pagination: {
            el: ".swiper-pagination",
            clickable: !0,
            renderBullet: function (e, n) {
                return '<span class="' + n + '"></span>'
            }
        },
        autoplay: {
            delay: 3000, 
            disableOnInteraction: false 
        },
        breakpoints: {
            0: {
                slidesPerView: 1,
                spaceBetween: 30
            },
            768: {
                slidesPerView: 2,
                spaceBetween: 30
            },
            1200: {
                slidesPerView: 3,
                spaceBetween: 30
            }
        }
    })
}));
var btn = $("#button_scroll");

function rnPrealoaderSetup() {
    var e = $("#loader");
    !!/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ? e.remove() : (setTimeout((function () {
        e.addClass("rn-preloaded")
    }), 100), setTimeout((function () {
        e.remove()
    }), 1500))
}
$(window).scroll((function () {
    $(window).scrollTop() > 300 ? btn.addClass("show") : btn.removeClass("show")
})), btn.on("click", (function (e) {
    e.preventDefault(), $("html, body").animate({
        scrollTop: 0
    }, "300")
})), $(".rn_surface").imagesLoaded().always((function () {
    setTimeout((function () {
        var e = new ScrollMagic.Controller;
        $(".rn_surface").each((function () {
            new ScrollMagic.Scene({
                triggerElement: this,
                triggerHook: .9,
                reverse: !1
            }).setClassToggle(this, "animated").addTo(e)
        }))
    }), 0)
})), $(window).on("load", (function () {
    rnPrealoaderSetup()
})), $(".tilt").tilt({
    maxTilt: 3
}), $(".tilt_gallery").tilt({
    maxTilt: 10,
    scale: 1,
    speed: 500,
    glare: !0
}), $(".cocoen").cocoen(), window.onload = function () {
    lax.setup({
        breakpoints: {
            small: 0,
            large: 992
        }
    });
    const e = () => {
        lax.update(window.scrollY), window.requestAnimationFrame(e)
    };
    window.requestAnimationFrame(e)
}, $(".jarallax").jarallax({
    speed: .8
});



	// testimonial Carousel
	if ($('.test-carousel').length) {
		$('.test-carousel').owlCarousel({
			animateOut: 'fadeOut',
    		animateIn: 'fadeIn',
			loop:true,
			margin:30,
			nav:true,
			//autoHeight: true,
			smartSpeed: 500,
			autoplay: 6000,
			navText: [ '<span class="fas fa-angle-left"></span>', '<span class="fas fa-angle-right"></span>' ],
			responsive:{
				0:{
					items:1
				},
				600:{
					items:1
				},
				800:{
					items:2
				},
				1024:{
					items:2
				},
				1200:{
					items:2
				}
			}
		});
	}

    	// testimonial Carousel
	if ($('.blog-carousel').length) {
		$('.blog-carousel').owlCarousel({
			animateOut: 'fadeOut',
    		animateIn: 'fadeIn',
			loop:true,
			margin:30,
			nav:true,
			//autoHeight: true,
			smartSpeed: 500,
			autoplay: 6000,
			navText: [ '<span class="fas fa-angle-left"></span>', '<span class="fas fa-angle-right"></span>' ],
			responsive:{
				0:{
					items:1
				},
				600:{
					items:1
				},
				800:{
					items:2
				},
				1024:{
					items:2
				},
				1200:{
					items:3
				}
			}
		});
	}

        	// client Carousel
	if ($('.client-carousel').length) {
		$('.client-carousel').owlCarousel({
			animateOut: 'fadeOut',
    		animateIn: 'fadeIn',
			loop:true,
			margin:0,
			nav:true,
			//autoHeight: true,
			smartSpeed: 500,
			autoplay: 6000,
			navText: [ '<span class="fas fa-angle-left"></span>', '<span class="fas fa-angle-right"></span>' ],
			responsive:{
				0:{
					items:1
				},
				600:{
					items:1
				},
				800:{
					items:3
				},
				1024:{
					items:4
				},
				1200:{
					items:6
				}
			}
		});
	}

        	// team Carousel
	if ($('.team-carousel').length) {
		$('.team-carousel').owlCarousel({
			animateOut: 'fadeOut',
    		animateIn: 'fadeIn',
			loop:true,
			margin:30,
			nav:true,
			//autoHeight: true,
			smartSpeed: 500,
			autoplay: 6000,
			navText: [ '<span class="fas fa-angle-left"></span>', '<span class="fas fa-angle-right"></span>' ],
			responsive:{
				0:{
					items:1
				},
				600:{
					items:1
				},
				800:{
					items:2
				},
				1024:{
					items:2
				},
				1200:{
					items:4
				}
			}
		});
	}


    const slides = document.querySelectorAll('.sld_f');
    let currentSlide = 0;

    function nextSlide() {
      slides[currentSlide].classList.remove('active');
      currentSlide = (currentSlide + 1) % slides.length;
      slides[currentSlide].classList.add('active');
    }

    setInterval(nextSlide, 3000); 

    $('.count').each(function () {
        $(this).prop('Counter',0).animate({
            Counter: $(this).text()
        }, {
            duration: 4000,
            easing: 'swing',
            step: function (now) {
                $(this).text(Math.ceil(now));
            }
        });
    });

    // resume upload

    jQuery(function($){
        uploadFile();
    
        function uploadFile() {
            var trigger = $("input[type=file]");
            $(trigger).change(function() {
                var display = $(this).parents(".gfield").find(".upload-filename"),
                    filename = $(this).val(),
                    fakePath = filename.toString().split('\\');
                    fakePath = fakePath[fakePath.length - 1];
                $(display).html(fakePath);
            });
        }
    });

    // accordion

    const wrapper = document.querySelector('.quality-wrapper')

    let activeIndex = null;

    const updateContentHeight = (contentWrapper, isOpen) => {
        if (isOpen) {
            // close previous
            if (activeIndex !== null) {
                const prev = wrapper.querySelector(`.item-title[data-index="${activeIndex}"]`)
                prev.nextElementSibling.style.height = 0
            }

            // open new
            const contentDom = contentWrapper.querySelector('.content')
            const contentHeight = contentDom.clientHeight
            contentWrapper.style.height = contentHeight + 'px'
        } else {
            contentWrapper.style.height = 0
        }
    }

    const updateActiveIndex = (newIndex) => {
        const oldIndex = activeIndex
        activeIndex = newIndex
        // update class
        if (oldIndex !== null) {
            const dom = wrapper.querySelector(`.item-title[data-index="${oldIndex}"]`)
            dom.parentElement.classList.remove('active')
        }
        if (newIndex !== null) {
            const dom = wrapper.querySelector(`.item-title[data-index="${newIndex}"]`)
            dom.parentElement.classList.add('active')
        }
    }

    wrapper.addEventListener('click', (e) => {
        const isTitle = Array.from(e.target.classList).includes('item-title')
        if (!isTitle) return

        const targetIndex = Number(e.target.getAttribute('data-index'))
        const contentWrapper = e.target.nextElementSibling
        const isOpen = targetIndex !== activeIndex
        updateContentHeight(contentWrapper, isOpen)
        updateActiveIndex(isOpen ? targetIndex : null)
    })